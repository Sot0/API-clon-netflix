scalar EmailAdd
scalar URL
scalar Upload

directive @auth on FIELD_DEFINITION | FIELD

type Query {
    getUsers: [User]!
    getUserById(id: ID!): User!
    getMovies: [Movie]!
    getMovieById(id: ID!): Movie!
    me: User!
}

type Mutation {
    createUser(data: UserCreateInput!): User!
    updateUser(data: UserUpdateInput!): User! @auth
    deleteUser: String! @auth
    createMovie(data: MovieCreateInput!): Movie! @auth
    updateMovie(id: ID!, data: MovieUpdateInput!): Movie! @auth
    deleteMovie(id: ID!): String! @auth
    createCommentOnByMovieId(id:ID!, data: CommentCreateInput!): Movie! @auth
    login(email: EmailAdd!, password: String!): Auth!
}

type Auth {
    token: String!
    message: String!
}

type User {
    _id: ID!,
    first_name: String!
    last_name: String!
    email: EmailAdd!
    password: String!
    birth_date: String!
    gender: GENDERS!
    profile_pic: URL
    favorites: [Movie]!
    is_active: Boolean!
}

type Movie {
    _id: ID!
    title: String!
    author: String!
    description: String!
    video: URL!
    cover: URL!
    categories: [CATEGORIES]!
    comments: [Comment]!
    is_active: Boolean!
}

type Comment {
    user: User!
    text: String!
}

enum GENDERS {
    M
    F
}

enum CATEGORIES {
    accion
    anime
    aventura
    comedia
    magia
    mexicana
    terror
}

input UserCreateInput {
    first_name: String!
    last_name: String!
    email: EmailAdd!
    password: String!
    birth_date: String!
    gender: GENDERS!
    profile_pic: Upload
    is_active: Boolean
}

input UserUpdateInput {
    first_name: String
    last_name: String
    email: EmailAdd
    password: String
    birth_date: String
    gender: GENDERS
    profile_pic: Upload
    favorites: [ID]
    is_active: Boolean
}

input MovieCreateInput {
    title: String!
    author: String!
    description: String!
    video: Upload!
    cover: Upload!
    categories: [CATEGORIES]!
}

input MovieUpdateInput {
    title: String
    author: String
    description: String
    video: Upload
    cover: Upload
    categories: [CATEGORIES]!
    is_active: Boolean
}

input CommentCreateInput {
    user: ID!
    text: String!
}